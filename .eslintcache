[{"/Users/HANNIMILLION/Documents/Code_Practice/relias-moviedb/src/App.js":"1","/Users/HANNIMILLION/Documents/Code_Practice/relias-moviedb/src/MovieRow.js":"2","/Users/HANNIMILLION/Documents/Code_Practice/relias-moviedb/src/reportWebVitals.js":"3","/Users/HANNIMILLION/Documents/Code_Practice/relias-moviedb/src/index.js":"4","/Users/HANNIMILLION/Documents/Code_Practice/relias-moviedb/src/MovieHeader.js":"5","/Users/HANNIMILLION/Documents/Code_Practice/relias-moviedb/src/MovieOutput.js":"6","/Users/HANNIMILLION/Documents/Code_Practice/react-moviedb-relias/src/index.js":"7","/Users/HANNIMILLION/Documents/Code_Practice/react-moviedb-relias/src/MovieRow.js":"8","/Users/HANNIMILLION/Documents/Code_Practice/react-moviedb-relias/src/App.js":"9"},{"size":3031,"mtime":1612496016089,"results":"10","hashOfConfig":"11"},{"size":1110,"mtime":1612412359112,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1612323479450,"results":"13","hashOfConfig":"11"},{"size":500,"mtime":1612323479449,"results":"14","hashOfConfig":"11"},{"size":839,"mtime":1612412641838,"results":"15","hashOfConfig":"11"},{"size":608,"mtime":1612458838831,"results":"16","hashOfConfig":"11"},{"size":500,"mtime":1612323479449,"results":"17","hashOfConfig":"18"},{"size":1110,"mtime":1612412359112,"results":"19","hashOfConfig":"18"},{"size":3055,"mtime":1612917533997,"results":"20","hashOfConfig":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"10totyg",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kkl7bt",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/HANNIMILLION/Documents/Code_Practice/relias-moviedb/src/App.js",["41"],"import React, { Component } from 'react';\nimport './App.css';\nimport MovieRow from './MovieRow.js'\nimport $ from 'jquery'\nimport { render } from '@testing-library/react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasResults: true,\n    };\n    this.performSearch(\"\");\n  \n  }\n\n  performSearch(searchTerm) {\n\n    // console.log(\"Perform search using moviedb\")\n    const urlString = \"https://api.themoviedb.org/3/search/movie?api_key=a45060455da3e16ead4c6661b8eeef03&query=\" + searchTerm;\n    $.ajax({\n      url: urlString,\n      success: (searchResults) => {\n        // console.log('successful data fetch')\n        // console.log(searchResults)\n        console.log(searchResults)\n        // searchResults is a dictionary that contains the results of comm w api \n        var results = searchResults.results\n        // results here is a list of objects acquired from the search results(api call)\n        // array.filter(Boolean) filters out all instances of \"falsy\" values like Null, undefined, \"\" (empty string); sometimes it seems like we get a list of empty or null values which was causing the error.\n        results = results.filter(Boolean)\n\n        var movieRows = []\n        //array to store movie data\n\n        results.forEach((movie) => {\n          movie.poster_src =  \"https://image.tmdb.org/t/p/w185/\" + movie.poster_path\n          // console.log(movie.post_path)\n          const movieRow = <MovieRow key={movie.id} movie={movie}/>\n          movieRows.push(movieRow) \n        })\n        // if any rows exist, then don't display the \"no results\" message\n        this.setState({hasResults: movieRows.length})\n        this.setState({rows: movieRows})\n      }, \n      error: (xhr, status, err) => {\n        console.error(\"data fetch failed\")\n        // display the \"no results\" message; this also does not check for value to movie data. This merely functions to indicate error in comm w api\n      }\n    })\n  }\n\n  searchChangeHandler(event) {\n    // console.log(event.target.value)\n    const boundObject = this\n    const searchTerm = event.target.value\n      return (\n        boundObject.performSearch(searchTerm)\n      )\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <table className=\"titleBar\">\n          <tbody>\n            <tr>\n              <td>\n                <img alt=\"app icon\" className=\"logoImage\" src=\"RMC_logo_1.jpg\" />\n              </td>\n              <td className=\"titleContainer\">\n                <h3 id=\"title\"><b>Relias Media CenterÂ®</b></h3>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div>\n              <input className=\"searchBar input-field col s12\" placeholder=\"so it begins...\" onChange={this.searchChangeHandler.bind(this)} />\n              {this.state.rows}\n\n             {this.state.hasResults ? null : (<h4>Great Scott!! Try again :)</h4>)}\n             {/* if there are results, do nothing else show error message*/}\n        </div>\n      </div>\n    );\n    \n}\n}\n\nexport default App;\n","/Users/HANNIMILLION/Documents/Code_Practice/relias-moviedb/src/MovieRow.js",[],"/Users/HANNIMILLION/Documents/Code_Practice/relias-moviedb/src/reportWebVitals.js",[],"/Users/HANNIMILLION/Documents/Code_Practice/relias-moviedb/src/index.js",[],["42","43"],"/Users/HANNIMILLION/Documents/Code_Practice/relias-moviedb/src/MovieHeader.js",[],"/Users/HANNIMILLION/Documents/Code_Practice/relias-moviedb/src/MovieOutput.js",[],"/Users/HANNIMILLION/Documents/Code_Practice/react-moviedb-relias/src/index.js",[],"/Users/HANNIMILLION/Documents/Code_Practice/react-moviedb-relias/src/MovieRow.js",[],"/Users/HANNIMILLION/Documents/Code_Practice/react-moviedb-relias/src/App.js",[],{"ruleId":"44","severity":1,"message":"45","line":5,"column":10,"nodeType":"46","messageId":"47","endLine":5,"endColumn":16},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-global-assign","no-unsafe-negation"]